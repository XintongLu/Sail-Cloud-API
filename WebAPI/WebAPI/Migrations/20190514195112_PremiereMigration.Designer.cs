// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Models;

namespace WebAPI.Migrations
{
    [DbContext(typeof(APIContext))]
    [Migration("20190514195112_PremiereMigration")]
    partial class PremiereMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAPI.Models.Bateau", b =>
                {
                    b.Property<int>("BateauId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnnéeFabrication");

                    b.Property<float>("Largeur");

                    b.Property<float>("Longueur");

                    b.Property<string>("Nom")
                        .IsRequired();

                    b.Property<float>("Poids");

                    b.Property<Guid>("UtilisateurId");

                    b.HasKey("BateauId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Bateau");
                });

            modelBuilder.Entity("WebAPI.Models.Position_Bateau", b =>
                {
                    b.Property<int>("Position_BateauId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Ap");

                    b.Property<float>("BS");

                    b.Property<int>("BateauId");

                    b.Property<float>("Et");

                    b.Property<float>("PC");

                    b.Property<float>("PH");

                    b.Property<float>("PHm");

                    b.Property<float>("PLg");

                    b.Property<float>("PLt");

                    b.Property<float>("PS");

                    b.Property<float>("PSr");

                    b.Property<Guid>("UtilisateurId");

                    b.Property<float>("WAa");

                    b.Property<float>("WAs");

                    b.Property<float>("WTD2");

                    b.Property<float>("WTa");

                    b.Property<float>("WTd");

                    b.Property<float>("WTs");

                    b.Property<float>("e");

                    b.Property<float>("s");

                    b.Property<DateTime>("t");

                    b.Property<float>("v");

                    b.HasKey("Position_BateauId");

                    b.HasIndex("BateauId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Position_bateau");
                });

            modelBuilder.Entity("WebAPI.Models.Utilisateur", b =>
                {
                    b.Property<Guid>("UtilisateurId");

                    b.Property<int>("Age");

                    b.Property<string>("Nom")
                        .IsRequired();

                    b.Property<string>("Prénom");

                    b.HasKey("UtilisateurId");

                    b.ToTable("Utilisateur");
                });

            modelBuilder.Entity("WebAPI.Models.Bateau", b =>
                {
                    b.HasOne("WebAPI.Models.Utilisateur", "Utilisateur")
                        .WithMany("Bateaux")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebAPI.Models.Position_Bateau", b =>
                {
                    b.HasOne("WebAPI.Models.Bateau", "bateau")
                        .WithMany("Position_Bateaux")
                        .HasForeignKey("BateauId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebAPI.Models.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
